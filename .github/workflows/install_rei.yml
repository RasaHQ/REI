name: Pull Request Test && Merge
on: [pull_request]
jobs:
  install:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm-256color
      COLORTERM: truecolor
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è run bash rei.sh --yes"
      - name: Install Docker
        if: matrix.os == 'macos-latest'
        run: |
          brew cask install docker
          # allow the app to run without confirmation
          xattr -d -r com.apple.quarantine /Applications/Docker.app

          # preemptively do docker.app's setup to avoid any gui prompts
          sudo /bin/cp /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd /Library/PrivilegedHelperTools
          sudo /bin/cp /Applications/Docker.app/Contents/Resources/com.docker.vmnetd.plist /Library/LaunchDaemons/
          sudo /bin/chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
          sudo /bin/chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
          sudo /bin/launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist
          open -g -a Docker.app

          # Wait for the server to start up, if applicable.
          i=0
          while ! docker system info &>/dev/null; do
            (( i++ == 0 )) && printf %s '-- Waiting for Docker to finish starting up...' || printf '.'
            sleep 1
          done
          (( i )) && printf '\n'

          # https://github.com/actions/virtual-environments/issues/1143#issuecomment-652264388
          echo "-- Docker is ready."

      - name: run REI install
        run: |
          bash rei.sh --yes
      - run: echo "üçè This job's status is ${{ job.status }}."

  add_label:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-ecosystem/action-add-labels@v1
        if: ${{ startsWith(github.event.comment.body, '/add-labels') }}
        with:
          labels: automerge
